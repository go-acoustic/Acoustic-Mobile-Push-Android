apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "checkstyle"

android {
    compileSdk project.ext.compileSdkVersion

    defaultConfig {
        applicationId "co.acoustic.mobile.push.samples.android"
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        animationsDisabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    namespace 'co.acoustic.mobile.push.samples.android'

    androidResources {
        additionalParameters '--no-version-vectors'
    }
}

task checkstyle(type: Checkstyle, group: "verification") {
    source "src"
    include "**/*.java"
    exclude "**/gen/**"
    exclude "**/R.java"
    exclude "**/BuildConfig.java"

    configFile file("config/checkstyle/checkstyle.xml")
    configProperties = ["suppressionFile": file("config/checkstyle/checkstyle_suppressions.xml")]

    // empty classpath
    classpath = files()
}

dependencies {
    implementation project(':sdk')
    implementation project(':plugin-calendar')
    implementation project(':plugin-carousel')
    implementation project(':plugin-displayweb')
    implementation project(':plugin-inapp')
    implementation project(':plugin-inbox')
    implementation project(':plugin-snooze')
    implementation project(':plugin-example')

    implementation "androidx.legacy:legacy-support-v4:" + project.ext.androidxLegacyLibVersion
    implementation "androidx.appcompat:appcompat:" + project.ext.androidxLibVersion
    implementation "androidx.annotation:annotation:" + project.ext.androidxAnnotationVersion

    implementation "com.google.android.gms:play-services-base:" + project.ext.playServicesBaseVersion
    implementation "com.google.android.gms:play-services-location:" + project.ext.playServicesLocationVersion
    implementation "com.google.android.gms:play-services-maps:" + project.ext.playServicesMapsVersion

    implementation "com.google.firebase:firebase-messaging:" + project.ext.firebaseMessagingVersion

    implementation "com.google.guava:guava:" + project.guavaVersion
    implementation "com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava"
    implementation "com.github.bumptech.glide:glide:" + project.glideVersion
    implementation "androidx.test.espresso:espresso-idling-resource:" + project.ext.espressoVersion

    // Dependencies for local unit tests
    testImplementation "org.mockito:mockito-all:" + project.ext.mockitoVersion
    testImplementation "org.hamcrest:hamcrest-all:" + project.ext.hamcrestVersion
    testImplementation "org.powermock:powermock-module-junit4:" + project.ext.powerMockito
    testImplementation "org.powermock:powermock-api-mockito:" + project.ext.powerMockito

    // Android Testing Support Library's runner and rules
    androidTestImplementation "androidx.test:runner:" + project.ext.androidxTestRunnerVersion
    androidTestImplementation "androidx.test:rules:" + project.ext.androidxTestRulesVersion
    androidTestImplementation "androidx.test.ext:junit:" + project.ext.androidxTestJunitVersion
    androidTestImplementation "androidx.test:core:" + project.ext.androidxTestCoreVersion
    androidTestImplementation 'org.mockito:mockito-android:' + project.ext.mockitoAndroid
}

apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'com.google.gms.google-services'

repositories {
    mavenCentral()
}